//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.08 at 09:29:27 PM CEST 
//


package edu.anb.core;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AttributeBehaviourEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AttributeBehaviourEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="AttMergeAdd"/>
 *     &lt;enumeration value="AttMergeAddIfNotIn"/>
 *     &lt;enumeration value="AttMergeAddWithLineBreak"/>
 *     &lt;enumeration value="AttMergeAddWithLineBreakIfNotIn"/>
 *     &lt;enumeration value="AttMergeAddWithSpace"/>
 *     &lt;enumeration value="AttMergeAddWithSpaceIfNotIn"/>
 *     &lt;enumeration value="AttMergeAND"/>
 *     &lt;enumeration value="AttMergeAssign"/>
 *     &lt;enumeration value="AttMergeMax"/>
 *     &lt;enumeration value="AttMergeMin"/>
 *     &lt;enumeration value="AttMergeNoOp"/>
 *     &lt;enumeration value="AttMergeOR"/>
 *     &lt;enumeration value="AttMergeSubtract"/>
 *     &lt;enumeration value="AttMergeSubtractSwap"/>
 *     &lt;enumeration value="AttMergeXOR"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AttributeBehaviourEnum")
@XmlEnum
public enum AttributeBehaviourEnum {


    /**
     * Add the source value to the destination value. Attribute types must be either AttNumber or AttText.
     * 
     */
    @XmlEnumValue("AttMergeAdd")
    ATT_MERGE_ADD("AttMergeAdd"),

    /**
     * Add the source value to the destination value. Discard duplicate values. The destination attribute type must be AttText.
     * 
     */
    @XmlEnumValue("AttMergeAddIfNotIn")
    ATT_MERGE_ADD_IF_NOT_IN("AttMergeAddIfNotIn"),

    /**
     * Append the source value to the destination value, separated by a line break. The destination attribute type must be AttText.
     * 
     */
    @XmlEnumValue("AttMergeAddWithLineBreak")
    ATT_MERGE_ADD_WITH_LINE_BREAK("AttMergeAddWithLineBreak"),

    /**
     * Append the source value to the destination value, separated by a line break. Discard duplicate values. The destination attribute type must be AttText.
     * 
     */
    @XmlEnumValue("AttMergeAddWithLineBreakIfNotIn")
    ATT_MERGE_ADD_WITH_LINE_BREAK_IF_NOT_IN("AttMergeAddWithLineBreakIfNotIn"),

    /**
     * Append the source value to the destination value, separated by a space. The destination attribute type must be AttText.
     * 
     */
    @XmlEnumValue("AttMergeAddWithSpace")
    ATT_MERGE_ADD_WITH_SPACE("AttMergeAddWithSpace"),

    /**
     * Append the source value to the destination value, separated by a space. Discard duplicate values. The destination attribute type must be AttText.
     * 
     */
    @XmlEnumValue("AttMergeAddWithSpaceIfNotIn")
    ATT_MERGE_ADD_WITH_SPACE_IF_NOT_IN("AttMergeAddWithSpaceIfNotIn"),

    /**
     * Logical AND of values. Attribute types must be AttFlag.
     * 
     */
    @XmlEnumValue("AttMergeAND")
    ATT_MERGE_AND("AttMergeAND"),

    /**
     * Assign the source value to the destination value, and discard the original destination value. Attribute types must be the same type.
     * 
     */
    @XmlEnumValue("AttMergeAssign")
    ATT_MERGE_ASSIGN("AttMergeAssign"),

    /**
     * Assign the maximum of the two values to the destination value. Attribute types must be the same type, and be either AttNumber or AttTime.
     * 
     */
    @XmlEnumValue("AttMergeMax")
    ATT_MERGE_MAX("AttMergeMax"),

    /**
     * Assign the minimum of the two values to the destination value. Attribute types must be the same type, and be either AttNumber or AttTime.
     * 
     */
    @XmlEnumValue("AttMergeMin")
    ATT_MERGE_MIN("AttMergeMin"),

    /**
     * Destination value is not changed. The source value is discarded. Both source and destination attribute must be the same type.
     * 
     */
    @XmlEnumValue("AttMergeNoOp")
    ATT_MERGE_NO_OP("AttMergeNoOp"),

    /**
     * Logical inclusive-OR of values. Destination attribute type must be AttFlag.
     * 
     */
    @XmlEnumValue("AttMergeOR")
    ATT_MERGE_OR("AttMergeOR"),

    /**
     * Assign the result of (destination value minus source value) to the destination value. Attribute types must be AttNumber.
     * 
     */
    @XmlEnumValue("AttMergeSubtract")
    ATT_MERGE_SUBTRACT("AttMergeSubtract"),

    /**
     * Assign the result of (source value minus destination value) to the destination value. Attribute types must be AttNumber.
     * 
     */
    @XmlEnumValue("AttMergeSubtractSwap")
    ATT_MERGE_SUBTRACT_SWAP("AttMergeSubtractSwap"),

    /**
     * Logical exclusive-OR of values. Destination attribute type must be AttFlag.
     * 
     */
    @XmlEnumValue("AttMergeXOR")
    ATT_MERGE_XOR("AttMergeXOR");
    private final java.lang.String value;

    AttributeBehaviourEnum(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static AttributeBehaviourEnum fromValue(java.lang.String v) {
        for (AttributeBehaviourEnum c: AttributeBehaviourEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
