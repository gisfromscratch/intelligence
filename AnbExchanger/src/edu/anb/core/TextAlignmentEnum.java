//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.08 at 09:29:27 PM CEST 
//


package edu.anb.core;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TextAlignmentEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TextAlignmentEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="TextAlignAny"/>
 *     &lt;enumeration value="TextAlignCentre"/>
 *     &lt;enumeration value="TextAlignLeft"/>
 *     &lt;enumeration value="TextAlignRight"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TextAlignmentEnum")
@XmlEnum
public enum TextAlignmentEnum {


    /**
     * Alignment not specified. Do not set a property to this value.
     * 
     */
    @XmlEnumValue("TextAlignAny")
    TEXT_ALIGN_ANY("TextAlignAny"),

    /**
     * Center the text.
     * 
     */
    @XmlEnumValue("TextAlignCentre")
    TEXT_ALIGN_CENTRE("TextAlignCentre"),

    /**
     * Left align the text.
     * 
     */
    @XmlEnumValue("TextAlignLeft")
    TEXT_ALIGN_LEFT("TextAlignLeft"),

    /**
     * Right align the text.
     * 
     */
    @XmlEnumValue("TextAlignRight")
    TEXT_ALIGN_RIGHT("TextAlignRight");
    private final java.lang.String value;

    TextAlignmentEnum(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static TextAlignmentEnum fromValue(java.lang.String v) {
        for (TextAlignmentEnum c: TextAlignmentEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
