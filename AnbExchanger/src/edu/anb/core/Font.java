//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.08 at 09:29:27 PM CEST 
//


package edu.anb.core;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="BackColour" type="{http://www.w3.org/2001/XMLSchema}int" default="16777215" />
 *       &lt;attribute name="Bold" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="CharSet" type="{}FontCharSetEnum" default="CharSetDefault" />
 *       &lt;attribute name="FaceName" type="{http://www.w3.org/2001/XMLSchema}string" default="Arial" />
 *       &lt;attribute name="FontColour" type="{http://www.w3.org/2001/XMLSchema}int" default="0" />
 *       &lt;attribute name="Italic" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="PointSize" type="{http://www.w3.org/2001/XMLSchema}short" default="8" />
 *       &lt;attribute name="Strikeout" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="Underline" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "Font")
public class Font {

    @XmlAttribute(name = "BackColour")
    protected Integer backColour;
    @XmlAttribute(name = "Bold")
    protected Boolean bold;
    @XmlAttribute(name = "CharSet")
    protected FontCharSetEnum charSet;
    @XmlAttribute(name = "FaceName")
    protected java.lang.String faceName;
    @XmlAttribute(name = "FontColour")
    protected Integer fontColour;
    @XmlAttribute(name = "Italic")
    protected Boolean italic;
    @XmlAttribute(name = "PointSize")
    protected Short pointSize;
    @XmlAttribute(name = "Strikeout")
    protected Boolean strikeout;
    @XmlAttribute(name = "Underline")
    protected Boolean underline;

    /**
     * Gets the value of the backColour property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getBackColour() {
        if (backColour == null) {
            return  16777215;
        } else {
            return backColour;
        }
    }

    /**
     * Sets the value of the backColour property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setBackColour(Integer value) {
        this.backColour = value;
    }

    /**
     * Gets the value of the bold property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isBold() {
        if (bold == null) {
            return false;
        } else {
            return bold;
        }
    }

    /**
     * Sets the value of the bold property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setBold(Boolean value) {
        this.bold = value;
    }

    /**
     * Gets the value of the charSet property.
     * 
     * @return
     *     possible object is
     *     {@link FontCharSetEnum }
     *     
     */
    public FontCharSetEnum getCharSet() {
        if (charSet == null) {
            return FontCharSetEnum.CHAR_SET_DEFAULT;
        } else {
            return charSet;
        }
    }

    /**
     * Sets the value of the charSet property.
     * 
     * @param value
     *     allowed object is
     *     {@link FontCharSetEnum }
     *     
     */
    public void setCharSet(FontCharSetEnum value) {
        this.charSet = value;
    }

    /**
     * Gets the value of the faceName property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    public java.lang.String getFaceName() {
        if (faceName == null) {
            return "Arial";
        } else {
            return faceName;
        }
    }

    /**
     * Sets the value of the faceName property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setFaceName(java.lang.String value) {
        this.faceName = value;
    }

    /**
     * Gets the value of the fontColour property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getFontColour() {
        if (fontColour == null) {
            return  0;
        } else {
            return fontColour;
        }
    }

    /**
     * Sets the value of the fontColour property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setFontColour(Integer value) {
        this.fontColour = value;
    }

    /**
     * Gets the value of the italic property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isItalic() {
        if (italic == null) {
            return false;
        } else {
            return italic;
        }
    }

    /**
     * Sets the value of the italic property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setItalic(Boolean value) {
        this.italic = value;
    }

    /**
     * Gets the value of the pointSize property.
     * 
     * @return
     *     possible object is
     *     {@link Short }
     *     
     */
    public short getPointSize() {
        if (pointSize == null) {
            return ((short) 8);
        } else {
            return pointSize;
        }
    }

    /**
     * Sets the value of the pointSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Short }
     *     
     */
    public void setPointSize(Short value) {
        this.pointSize = value;
    }

    /**
     * Gets the value of the strikeout property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isStrikeout() {
        if (strikeout == null) {
            return false;
        } else {
            return strikeout;
        }
    }

    /**
     * Sets the value of the strikeout property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setStrikeout(Boolean value) {
        this.strikeout = value;
    }

    /**
     * Gets the value of the underline property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isUnderline() {
        if (underline == null) {
            return false;
        } else {
            return underline;
        }
    }

    /**
     * Sets the value of the underline property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUnderline(Boolean value) {
        this.underline = value;
    }

}
