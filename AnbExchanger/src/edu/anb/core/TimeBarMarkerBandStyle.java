//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.08 at 09:29:27 PM CEST 
//


package edu.anb.core;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="MarkerSymbolColour" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="OverLappingMarkerSymbolColour" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="Visible" use="required" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "TimeBarMarkerBandStyle")
public class TimeBarMarkerBandStyle {

    @XmlAttribute(name = "MarkerSymbolColour", required = true)
    protected int markerSymbolColour;
    @XmlAttribute(name = "OverLappingMarkerSymbolColour", required = true)
    protected int overLappingMarkerSymbolColour;
    @XmlAttribute(name = "Visible", required = true)
    protected boolean visible;

    /**
     * Gets the value of the markerSymbolColour property.
     * 
     */
    public int getMarkerSymbolColour() {
        return markerSymbolColour;
    }

    /**
     * Sets the value of the markerSymbolColour property.
     * 
     */
    public void setMarkerSymbolColour(int value) {
        this.markerSymbolColour = value;
    }

    /**
     * Gets the value of the overLappingMarkerSymbolColour property.
     * 
     */
    public int getOverLappingMarkerSymbolColour() {
        return overLappingMarkerSymbolColour;
    }

    /**
     * Sets the value of the overLappingMarkerSymbolColour property.
     * 
     */
    public void setOverLappingMarkerSymbolColour(int value) {
        this.overLappingMarkerSymbolColour = value;
    }

    /**
     * Gets the value of the visible property.
     * 
     */
    public boolean isVisible() {
        return visible;
    }

    /**
     * Sets the value of the visible property.
     * 
     */
    public void setVisible(boolean value) {
        this.visible = value;
    }

}
