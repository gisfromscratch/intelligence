//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.08 at 09:29:27 PM CEST 
//


package edu.anb.core;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PreferredRepresentationEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PreferredRepresentationEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="RepresentAsBorder"/>
 *     &lt;enumeration value="RepresentAsBox"/>
 *     &lt;enumeration value="RepresentAsCircle"/>
 *     &lt;enumeration value="RepresentAsEvent"/>
 *     &lt;enumeration value="RepresentAsIcon"/>
 *     &lt;enumeration value="RepresentAsOLE"/>
 *     &lt;enumeration value="RepresentAsTextBlock"/>
 *     &lt;enumeration value="RepresentAsTheme"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PreferredRepresentationEnum")
@XmlEnum
public enum PreferredRepresentationEnum {


    /**
     * Represent as border.
     * 
     */
    @XmlEnumValue("RepresentAsBorder")
    REPRESENT_AS_BORDER("RepresentAsBorder"),

    /**
     * Represent as a box.
     * 
     */
    @XmlEnumValue("RepresentAsBox")
    REPRESENT_AS_BOX("RepresentAsBox"),

    /**
     * Represent as a circle.
     * 
     */
    @XmlEnumValue("RepresentAsCircle")
    REPRESENT_AS_CIRCLE("RepresentAsCircle"),

    /**
     * Represent as an event frame.
     * 
     */
    @XmlEnumValue("RepresentAsEvent")
    REPRESENT_AS_EVENT("RepresentAsEvent"),

    /**
     * Represent as an icon.
     * 
     */
    @XmlEnumValue("RepresentAsIcon")
    REPRESENT_AS_ICON("RepresentAsIcon"),

    /**
     * Represent as an OLE object.
     * 
     */
    @XmlEnumValue("RepresentAsOLE")
    REPRESENT_AS_OLE("RepresentAsOLE"),

    /**
     * Represent as a text block.
     * 
     */
    @XmlEnumValue("RepresentAsTextBlock")
    REPRESENT_AS_TEXT_BLOCK("RepresentAsTextBlock"),

    /**
     * Represent as a theme line.
     * 
     */
    @XmlEnumValue("RepresentAsTheme")
    REPRESENT_AS_THEME("RepresentAsTheme");
    private final java.lang.String value;

    PreferredRepresentationEnum(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static PreferredRepresentationEnum fromValue(java.lang.String v) {
        for (PreferredRepresentationEnum c: PreferredRepresentationEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
