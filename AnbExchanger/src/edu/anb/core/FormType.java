//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.08 at 09:29:27 PM CEST 
//


package edu.anb.core;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for FormType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FormType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="FormName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="baseForm" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="boolean"/>
 *               &lt;enumeration value="number"/>
 *               &lt;enumeration value="dateTime"/>
 *               &lt;enumeration value="text"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="formatters" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence minOccurs="0">
 *                   &lt;element name="formatter" maxOccurs="unbounded" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;simpleContent>
 *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                           &lt;attribute name="syntax" default="iLink">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                                 &lt;enumeration value="iLink"/>
 *                                 &lt;enumeration value=".net"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                         &lt;/extension>
 *                       &lt;/simpleContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="Documentation" type="{http://www.i2group.com/Schemas/2001-12-07/LCXSchema}SimpleDocumentationType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="fGUID" use="required" type="{http://www.i2group.com/Schemas/2001-12-07/LCXSchema}GUID" />
 *       &lt;attribute name="units" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="factor" type="{http://www.w3.org/2001/XMLSchema}double" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FormType", namespace = "http://www.i2group.com/Schemas/2001-12-07/LCXSchema", propOrder = {
    "formName",
    "baseForm",
    "formatters",
    "documentation"
})
public class FormType {

    @XmlElement(name = "FormName", required = true)
    protected java.lang.String formName;
    protected java.lang.String baseForm;
    protected FormType.Formatters formatters;
    @XmlElement(name = "Documentation")
    protected SimpleDocumentationType documentation;
    @XmlAttribute(name = "fGUID", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    protected java.lang.String fguid;
    @XmlAttribute(name = "units")
    protected java.lang.String units;
    @XmlAttribute(name = "factor")
    protected Double factor;

    /**
     * Gets the value of the formName property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    public java.lang.String getFormName() {
        return formName;
    }

    /**
     * Sets the value of the formName property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setFormName(java.lang.String value) {
        this.formName = value;
    }

    /**
     * Gets the value of the baseForm property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    public java.lang.String getBaseForm() {
        return baseForm;
    }

    /**
     * Sets the value of the baseForm property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setBaseForm(java.lang.String value) {
        this.baseForm = value;
    }

    /**
     * Gets the value of the formatters property.
     * 
     * @return
     *     possible object is
     *     {@link FormType.Formatters }
     *     
     */
    public FormType.Formatters getFormatters() {
        return formatters;
    }

    /**
     * Sets the value of the formatters property.
     * 
     * @param value
     *     allowed object is
     *     {@link FormType.Formatters }
     *     
     */
    public void setFormatters(FormType.Formatters value) {
        this.formatters = value;
    }

    /**
     * Gets the value of the documentation property.
     * 
     * @return
     *     possible object is
     *     {@link SimpleDocumentationType }
     *     
     */
    public SimpleDocumentationType getDocumentation() {
        return documentation;
    }

    /**
     * Sets the value of the documentation property.
     * 
     * @param value
     *     allowed object is
     *     {@link SimpleDocumentationType }
     *     
     */
    public void setDocumentation(SimpleDocumentationType value) {
        this.documentation = value;
    }

    /**
     * Gets the value of the fguid property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    public java.lang.String getFGUID() {
        return fguid;
    }

    /**
     * Sets the value of the fguid property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setFGUID(java.lang.String value) {
        this.fguid = value;
    }

    /**
     * Gets the value of the units property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    public java.lang.String getUnits() {
        return units;
    }

    /**
     * Sets the value of the units property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setUnits(java.lang.String value) {
        this.units = value;
    }

    /**
     * Gets the value of the factor property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getFactor() {
        return factor;
    }

    /**
     * Sets the value of the factor property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setFactor(Double value) {
        this.factor = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence minOccurs="0">
     *         &lt;element name="formatter" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="syntax" default="iLink">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *                       &lt;enumeration value="iLink"/>
     *                       &lt;enumeration value=".net"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "formatter"
    })
    public static class Formatters {

        protected List<FormType.Formatters.Formatter> formatter;

        /**
         * Gets the value of the formatter property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the formatter property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getFormatter().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link FormType.Formatters.Formatter }
         * 
         * 
         */
        public List<FormType.Formatters.Formatter> getFormatter() {
            if (formatter == null) {
                formatter = new ArrayList<FormType.Formatters.Formatter>();
            }
            return this.formatter;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="syntax" default="iLink">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
         *             &lt;enumeration value="iLink"/>
         *             &lt;enumeration value=".net"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Formatter {

            @XmlValue
            protected java.lang.String value;
            @XmlAttribute(name = "syntax")
            protected java.lang.String syntax;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link java.lang.String }
             *     
             */
            public java.lang.String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link java.lang.String }
             *     
             */
            public void setValue(java.lang.String value) {
                this.value = value;
            }

            /**
             * Gets the value of the syntax property.
             * 
             * @return
             *     possible object is
             *     {@link java.lang.String }
             *     
             */
            public java.lang.String getSyntax() {
                if (syntax == null) {
                    return "iLink";
                } else {
                    return syntax;
                }
            }

            /**
             * Sets the value of the syntax property.
             * 
             * @param value
             *     allowed object is
             *     {@link java.lang.String }
             *     
             */
            public void setSyntax(java.lang.String value) {
                this.syntax = value;
            }

        }

    }

}
