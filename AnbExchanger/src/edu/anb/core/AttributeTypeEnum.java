//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.08 at 09:29:27 PM CEST 
//


package edu.anb.core;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AttributeTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AttributeTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="AttFlag"/>
 *     &lt;enumeration value="AttNumber"/>
 *     &lt;enumeration value="AttText"/>
 *     &lt;enumeration value="AttTime"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AttributeTypeEnum")
@XmlEnum
public enum AttributeTypeEnum {


    /**
     * Flag attribute type, which can store a Boolean value.
     * 
     */
    @XmlEnumValue("AttFlag")
    ATT_FLAG("AttFlag"),

    /**
     * Number attribute type, which can store a Double value.
     * 
     */
    @XmlEnumValue("AttNumber")
    ATT_NUMBER("AttNumber"),

    /**
     * Text attribute type, which can store a String value.
     * 
     */
    @XmlEnumValue("AttText")
    ATT_TEXT("AttText"),

    /**
     * Date & Time attribute type, which can store a Date value.
     * 
     */
    @XmlEnumValue("AttTime")
    ATT_TIME("AttTime");
    private final java.lang.String value;

    AttributeTypeEnum(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static AttributeTypeEnum fromValue(java.lang.String v) {
        for (AttributeTypeEnum c: AttributeTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
